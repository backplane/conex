name: Docker
on:
  push:
    branches:
    - main
    tags:
    - v*.*.*
  pull_request:
  schedule:
  - cron: 16 9 * * *
env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  ORG: backplane

jobs:
  build-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      fail-fast: false
      matrix:
        container:
        - 7z
        - abe
        - adb
        - apg
        - audiosprite
        - black
        - blampy
        - bpython
        - chardet
        - checkmake
        - chrome
        - compose_sort
        - firefox
        - fzf
        - ghlatest
        - goenv
        - graphviz
        - grta
        - haskellenv
        - httpie
        - hugo
        - jq
        - json-server
        - kp1p
        - lxde
        - mssql-cli
        - mssql-scripter
        - myip
        - mypy
        - ods_conv
        - pdf
        - pwgen
        - pycodestyle
        - pygmentize
        - pylint
        - qrencode
        - shunit2
        - snakeeyes
        - sql-formatter
        - tsqllint
        - vueenv
        - wimlib-imagex
        - wireguard
        - wpa_passphrase
        - youtube-dl
    if: github.event_name == 'push' || github.event_name == 'schedule'
    steps:

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ env.REGISTRY }}/${{ env.ORG }}/${{ matrix.container }}
        tags: |
          type=schedule
          type=ref,event=branch
        flavor: |
          latest=true

    - name: Calculate Perishable Checksum
      id: psum
      run: |
        set -ex
        PSUM="$(.helpers/context_psum.py ${{ matrix.container }})"
        printf '::set-output name=%s::%s\n' "psum" "$PSUM"

    # Build and push Docker image with Buildx (don't push on PR)
    # https://github.com/docker/build-push-action
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: ${{ matrix.container }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: |
          ${{ steps.meta.outputs.labels }}
          be.backplane.conex.psum=${{ steps.psum.outputs.psum }}
        platforms: linux/amd64,linux/arm64,linux/arm/v7
