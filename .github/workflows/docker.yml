name: Docker
on:
  push:
    branches:
    - main
    tags:
    - v*.*.*
  pull_request:
  schedule:
  - cron: 16 9 * * *

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  ORG: backplane

jobs:
  build-push:
    if: github.event_name == 'push' || github.event_name == 'schedule'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      fail-fast: false
      matrix:
        container:
        - 7z
        - abe
        - adb
        - apg
        - audiosprite
        - black
        - blampy
        - bpython
        - chardet
        - checkmake
        - chrome
        - compose_sort
        - firefox
        - fzf
        - ghlatest
        - goenv
        - graphviz
        - grta
        - haskellenv
        - httpie
        - hugo
        - jq
        - json-server
        - kp1p
        - lxde
        - mssql-cli
        - mssql-scripter
        - myip
        - mypy
        - ods_conv
        - pdf
        - pwgen
        - pycodestyle
        - pygmentize
        - pylint
        - qrencode
        - shunit2
        - snakeeyes
        - sql-formatter
        - tsqllint
        - vueenv
        - wimlib-imagex
        - wireguard
        - wpa_passphrase
        - youtube-dl

    steps:

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Load Custom Data
      id: cdata
      run: |
        set -ex

        output() {
          printf '::set-output name=%s::%s\n' "$1" "$2"
        }

        # perishable checksum
        psum="$(.helpers/context_psum.py "${{ matrix.container }}")"

        # see if perishable checksum matches the sum already on github
        published_psum="$(.helpers/hub_manifest.py --keypath config/Labels/be.backplane.image.context_psum "$ORG/${{ matrix.container }}" || true)"
        if [ "$psum" = "$published_psum" ]; then
          skipbuild=1
        else
          skipbuild=0
        fi

        # .platforms.txt override
        platforms_file="${{ matrix.container }}/.build_platforms.txt"
        platforms="linux/amd64,linux/arm64,linux/arm/v7"
        if [ -f "$platforms_file" ]; then
          platforms="$(cat "$platforms_file")"
        fi

        output "psum" "$psum"
        output "skipbuild" "$skipbuild"
        output "platforms" "$platforms"


    - name: Set up QEMU
      if: ${{ steps.cdata.outputs.skipbuild != '1' }}
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      if: ${{ steps.cdata.outputs.skipbuild != '1' }}
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Hub
      if: ${{ steps.cdata.outputs.skipbuild != '1' }}
      uses: docker/login-action@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Extract Docker metadata
      if: ${{ steps.cdata.outputs.skipbuild != '1' }}
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ env.REGISTRY }}/${{ env.ORG }}/${{ matrix.container }}
        tags: |
          type=raw,value=latest
        flavor: |
          latest=false

    # Build and push Docker image with Buildx (don't push on PR)
    # https://github.com/docker/build-push-action
    - name: Build and push Docker image
      if: ${{ steps.cdata.outputs.skipbuild != '1' }}
      uses: docker/build-push-action@v2
      with:
        context: ${{ matrix.container }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: |
          ${{ steps.meta.outputs.labels }}
          be.backplane.image.context_psum=${{ steps.cdata.outputs.psum }}
        platforms: ${{ steps.cdata.outputs.platforms }}
