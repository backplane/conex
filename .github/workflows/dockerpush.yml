name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*.*.*

  # Run tests for any PRs.
  pull_request:

env:
  DH_USER: galvanist

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  #test:
  #  runs-on: ubuntu-latest
  #
  #  steps:
  #    - uses: actions/checkout@v2
  #
  #    - name: Run tests
  #      run: |
  #        if [ -f docker-compose.test.yml ]; then
  #          docker-compose --file docker-compose.test.yml build
  #          docker-compose --file docker-compose.test.yml run sut
  #        else
  #          docker build . --file Dockerfile
  #        fi

  # Push image to GitHub Package Registry.
  # See also https://docs.docker.com/docker-hub/builds/
  buildpush:
    # Ensure test job passes before pushing image.
    #needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Log into registry
        run: printf '%s' "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Build push
        run: |
          for dockerfile in */Dockerfile; do
            PROJECT="$(dirname "$dockerfile")"
            IMAGE="docker.pkg.github.com/${{ github.repository }}/${PROJECT}:latest"

            # github releases
            docker pull "$IMAGE" || true
            docker build -t "$IMAGE" "$PROJECT" && docker push "$IMAGE"

            # dockerhub
            printf '%s' '${{ secrets.DOCKER_HUB_TOKEN }}' | docker login --username "$DH_USER" --password-stdin
            DH_IMAGE="${DH_USER}/conex:${PROJECT}"
            docker tag "$IMAGE" "$DH_IMAGE"
            docker push "$DH_IMAGE"
          done
